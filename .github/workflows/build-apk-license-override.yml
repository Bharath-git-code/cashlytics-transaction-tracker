name: Build APK (License Override)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Java 11  
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git unzip expect
        python -m pip install --upgrade pip
        pip install cython==0.29.36
        pip install buildozer

    - name: Prepare buildozer.spec
      run: |
        cp buildozer.spec buildozer.spec.backup
        sed -i 's/^android\.sdk_path/#android.sdk_path/' buildozer.spec
        sed -i 's/^android\.ndk_path/#android.ndk_path/' buildozer.spec

    - name: Pre-accept Android SDK licenses
      run: |
        # Set environment variables
        export ANDROID_SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
        
        # Create the license directory preemptively
        mkdir -p "$HOME/.android/licenses"
        
        # Pre-accept all common Android SDK licenses
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > "$HOME/.android/licenses/android-sdk-license"
        echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> "$HOME/.android/licenses/android-sdk-license"
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> "$HOME/.android/licenses/android-sdk-license"
        
        echo "84831b9409646a918e30573bab4c9c91346d8abd" > "$HOME/.android/licenses/android-sdk-preview-license"
        echo "504667f4c0de7af1a06de9f4b1727b84351f2910" >> "$HOME/.android/licenses/android-sdk-preview-license"
        
        echo "d975f751698a77b662f1254ddbeed3901e976f5a" > "$HOME/.android/licenses/intel-android-extra-license"
        
        echo "✅ Pre-accepted Android SDK licenses"

    - name: Build APK with expect for license handling
      run: |
        echo "🚀 Building APK with automatic license acceptance..."
        
        expect -c "
        set timeout 1800
        spawn buildozer android debug -v
        expect {
          \"Accept? (y/N):\" { 
            send \"y\r\"
            exp_continue 
          }
          \"Do you accept the license\" { 
            send \"y\r\"
            exp_continue 
          }
          \"(y/N)\" { 
            send \"y\r\"
            exp_continue 
          }
          \"y/N\" { 
            send \"y\r\"
            exp_continue 
          }
          eof { 
            puts \"Build process completed\"
          }
          timeout { 
            puts \"Build timed out\"
          }
        }
        " 2>&1 | tee expect_build.log

    - name: Check for APK files
      run: |
        echo "🔍 Searching for APK files:"
        find . -name "*.apk" -type f
        
        if [ -d bin ]; then
          echo "📂 bin directory:"
          ls -la bin/
        fi
        
        # Also check buildozer output directories
        find .buildozer -name "*.apk" -type f 2>/dev/null || echo "No APK in .buildozer"

    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cashlytics-apk-license-override
        path: |
          bin/*.apk
          **/*.apk
        retention-days: 30
        if-no-files-found: warn

    - name: Upload logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: license-override-logs
        path: |
          expect_build.log
          .buildozer/**/*.log
        retention-days: 7
        if-no-files-found: warn

    - name: Restore buildozer.spec
      if: always()
      run: |
        if [ -f buildozer.spec.backup ]; then
          mv buildozer.spec.backup buildozer.spec
        fi