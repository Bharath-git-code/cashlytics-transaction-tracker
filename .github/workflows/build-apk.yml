name: Build APK

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Java 8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          ccache \
          zlib1g-dev \
          libffi-dev \
          libssl-dev \
          autoconf \
          libtool \
          pkg-config \
          unzip \
          wget

    - name: Setup Android SDK manually
      run: |
        # Create Android SDK directory
        sudo mkdir -p /opt/android-sdk
        sudo chown -R $USER:$USER /opt/android-sdk
        
        # Download and install command line tools
        cd /tmp
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        mkdir -p /opt/android-sdk/cmdline-tools
        mv cmdline-tools /opt/android-sdk/cmdline-tools/latest
        
        # Set environment variables
        echo "ANDROID_HOME=/opt/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=/opt/android-sdk" >> $GITHUB_ENV
        echo "/opt/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "/opt/android-sdk/platform-tools" >> $GITHUB_PATH

    - name: Accept Android SDK licenses and install components
      run: |
        export ANDROID_HOME=/opt/android-sdk
        export ANDROID_SDK_ROOT=/opt/android-sdk
        export PATH=$PATH:/opt/android-sdk/cmdline-tools/latest/bin:/opt/android-sdk/platform-tools
        
        # Accept all licenses
        yes | /opt/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
        
        # Install required components matching buildozer.spec
        /opt/android-sdk/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "platforms;android-33" \
          "build-tools;33.0.2" \
          "ndk;25.2.9519653"
        
        # Verify installation
        ls -la /opt/android-sdk/build-tools/
        /opt/android-sdk/cmdline-tools/latest/bin/sdkmanager --list_installed

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython

    - name: Cache Buildozer global directory
      uses: actions/cache@v3
      with:
        path: ~/.buildozer
        key: buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          buildozer-

    - name: Cache Buildozer dependencies
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: buildozer-deps-${{ hashFiles('buildozer.spec') }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          buildozer-deps-

    - name: Build APK
      run: |
        export ANDROID_HOME=/opt/android-sdk
        export ANDROID_SDK_ROOT=/opt/android-sdk
        export PATH=$PATH:/opt/android-sdk/cmdline-tools/latest/bin:/opt/android-sdk/platform-tools
        
        # Debug: Print environment
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
        echo "PATH: $PATH"
        
        # Build APK
        buildozer android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: cashlytics-apk
        path: bin/*.apk
        retention-days: 30

    - name: Upload build logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: build-logs
        path: .buildozer/android/platform/build-*/logs/
        retention-days: 7